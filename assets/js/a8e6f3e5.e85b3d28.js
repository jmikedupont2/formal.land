"use strict";(self.webpackChunkformal_land=self.webpackChunkformal_land||[]).push([[4988],{3905:function(t,e,r){r.d(e,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var s=n.createContext({}),l=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},p=function(t){var e=l(t.components);return n.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,s=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),f=l(r),m=o,g=f["".concat(s,".").concat(m)]||f[m]||u[m]||a;return r?n.createElement(g,i(i({ref:e},p),{},{components:r})):n.createElement(g,i({ref:e},p))}));function m(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,i=new Array(a);i[0]=f;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:o,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8852:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},assets:function(){return p},toc:function(){return u},default:function(){return m}});var n=r(3117),o=r(102),a=(r(7294),r(3905)),i=["components"],c={title:"Verifying an ERC-20 smart contract in Rust",tags:["Aleph-Zero","coq-of-rust","Rust","Coq","ERC-20","ink!"],authors:[]},s=void 0,l={permalink:"/blog/2023/12/13/rust-verify-erc-20-smart-contract",source:"@site/blog/2023-12-13-rust-verify-erc-20-smart-contract.md",title:"Verifying an ERC-20 smart contract in Rust",description:"Our tool coq-of-rust enables formal verification of \ud83e\udd80&nbsp;Rust code to make sure that a program has no bugs given a precise specification. We work by translating Rust programs to the general proof system \ud83d\udc13&nbsp;Coq.",date:"2023-12-13T00:00:00.000Z",formattedDate:"December 13, 2023",tags:[{label:"Aleph-Zero",permalink:"/blog/tags/aleph-zero"},{label:"coq-of-rust",permalink:"/blog/tags/coq-of-rust"},{label:"Rust",permalink:"/blog/tags/rust"},{label:"Coq",permalink:"/blog/tags/coq"},{label:"ERC-20",permalink:"/blog/tags/erc-20"},{label:"ink!",permalink:"/blog/tags/ink"}],readingTime:20.115,truncated:!0,authors:[],prevItem:{title:"Translating Rust match patterns to Coq with coq-of-rust",permalink:"/blog/2024/01/04/rust-translating-match"},nextItem:{title:"Translation of function bodies from Rust to Coq",permalink:"/blog/2023/11/26/rust-function-body"}},p={authorsImageUrls:[]},u=[],f={toc:u};function m(t){var e=t.components,r=(0,o.Z)(t,i);return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Our tool ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/formal-land/coq-of-rust"},"coq-of-rust")," enables formal verification of ",(0,a.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/"},"\ud83e\udd80","\xa0","Rust")," code to make sure that a program has no bugs given a precise specification. We work by translating Rust programs to the general proof system ",(0,a.kt)("a",{parentName:"p",href:"https://coq.inria.fr/"},"\ud83d\udc13","\xa0","Coq"),"."),(0,a.kt)("p",null,"Here, we show how we formally verify an ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/paritytech/ink/blob/master/integration-tests/erc20/lib.rs"},"ERC-20 smart contract")," written in Rust for the ",(0,a.kt)("a",{parentName:"p",href:"https://alephzero.org/"},"Aleph Zero")," blockchain. ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Ethereum#ERC20"},"ERC-20")," smart contracts are used to create new kinds of tokens in an existing blockchain. Examples are stablecoins such as the ",(0,a.kt)("a",{parentName:"p",href:"https://tether.to/"},"\ud83d\udcb2USDT"),"."))}m.isMDXComponent=!0}}]);