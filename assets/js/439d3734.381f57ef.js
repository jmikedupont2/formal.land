"use strict";(self.webpackChunkformal_land=self.webpackChunkformal_land||[]).push([[7234],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),m=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=m(a),u=r,d=f["".concat(c,".").concat(u)]||f[u]||p[u]||o;return a?n.createElement(d,i(i({ref:t},s),{},{components:a})):n.createElement(d,i({ref:t},s))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},2888:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return m},toc:function(){return s},default:function(){return f}});var n=a(3117),r=a(102),o=(a(7294),a(3905)),i=["components"],l={},c="\ud83d\udc2b OCaml verification",m={unversionedId:"verification/ocaml",id:"verification/ocaml",title:"\ud83d\udc2b OCaml verification",description:"To formally verify OCaml programs we are developing the translator coq-of-ocaml. It translates OCaml code to similar-looking code in the interactive proof assistant Coq. We are then expert in the Coq system and can formally verify arbitrarily complex properties.",source:"@site/docs/verification/ocaml.md",sourceDirName:"verification",slug:"/verification/ocaml",permalink:"/docs/verification/ocaml",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"\ud83d\udcdc Press",permalink:"/docs/company/press"},next:{title:"\ud83e\udd80 Rust verification",permalink:"/docs/verification/rust"}},s=[],p={toc:s};function f(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"-ocaml-verification"},"\ud83d\udc2b OCaml verification"),(0,o.kt)("p",null,"To ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("a",{parentName:"em",href:"https://en.wikipedia.org/wiki/Formal_verification"},"formally verify"))," OCaml programs we are developing the translator ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/formal-land/coq-of-ocaml"},"coq-of-ocaml"),". It translates OCaml code to similar-looking code in the interactive proof assistant ",(0,o.kt)("a",{parentName:"p",href:"https://coq.inria.fr/"},"Coq"),". We are then expert in the Coq system and can formally verify arbitrarily complex properties."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Our leading application is the project ",(0,o.kt)("a",{parentName:"p",href:"https://formal-land.gitlab.io/coq-tezos-of-ocaml/"},"Coq Tezos of OCaml"),", where we are formally verifying a codebase of around 100,000 lines of OCaml for the crypto-currency ",(0,o.kt)("a",{parentName:"p",href:"https://tezos.com/"},"Tezos \ua729"),". To this day, we have written around 60,000 lines of Coq code, and are verifying:"),(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"the absence of internal errors,"),(0,o.kt)("li",{parentName:"ul"},"the backward compatibility,"),(0,o.kt)("li",{parentName:"ul"},"the preservation of the invariants,"),(0,o.kt)("li",{parentName:"ul"},"the serialization functions.")))),(0,o.kt)("p",null,"As an example, ",(0,o.kt)("inlineCode",{parentName:"p"},"coq-of-ocaml")," translates the following OCaml code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ocaml"},"(* OCaml code *)\nlet rec sum tree =\n  match tree with\n  | Leaf n -> n\n  | Node (tree1, tree2) -> sum tree1 + sum tree2\n")),(0,o.kt)("p",null,"to the corresponding Coq code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-coq"},"(* Coq code generated by `coq-of-ocaml` *)\nFixpoint sum (tree : tree int) : int :=\n  match tree with\n  | Leaf n => n\n  | Node tree1 tree2 => sum tree1 +i sum tree2\n  end.\n")),(0,o.kt)("p",null,"As you can see, there are no much differences between the two apart from the syntax. For example, we try to never generate new variable names during the translation. Having a Coq code that is similar in shape and in size to the original program helps us to write formal proofs more efficiently. Following an existing codebase is also a good idea to organize all the proofs when certifying a software."),(0,o.kt)("p",null,"We support a large subset of OCaml, including:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the functional core (functions, ",(0,o.kt)("inlineCode",{parentName:"li"},"let"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"match"),", ...)"),(0,o.kt)("li",{parentName:"ul"},"type definitions"),(0,o.kt)("li",{parentName:"ul"},"monadic programs"),(0,o.kt)("li",{parentName:"ul"},"modules, functors, and first-class modules"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},".ml")," and ",(0,o.kt)("inlineCode",{parentName:"li"},".mli")," files")),(0,o.kt)("p",null,"We also have partial support (with axioms) for:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"GADTs"),(0,o.kt)("li",{parentName:"ul"},"polymorphic variants"),(0,o.kt)("li",{parentName:"ul"},"extensible types")),(0,o.kt)("p",null,"We are now looking to support the new features introduced in OCaml 5."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Offer")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you want to make extra secure OCaml programs (to be applied in domains such as aviation, automotive, or medical devices) with formal verification, you can contact us by email at ",(0,o.kt)("a",{parentName:"p",href:"mailto:contact@formal.land"},"c","o","n","t","a","c","t","@","formal",".","l","a","n","d")," \u2709\ufe0f or schedule a call on ",(0,o.kt)("a",{parentName:"p",href:"https://koalendar.com/e/meet-with-formal-land"},"koalendar.com/e/meet-with-formal-land")," \u260e\ufe0f. Our main expertise is in the Coq system. We estimate there should be one ",(0,o.kt)("em",{parentName:"p"},"Coq developer")," for each three or four ",(0,o.kt)("em",{parentName:"p"},"OCaml developers")," to make formally verified software."))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Helping you build \ud83d\ude80")))}f.isMDXComponent=!0}}]);