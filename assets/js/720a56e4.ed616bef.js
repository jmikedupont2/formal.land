"use strict";(self.webpackChunkformal_land=self.webpackChunkformal_land||[]).push([[3478],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),s=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=n,u=d["".concat(c,".").concat(f)]||d[f]||m[f]||i;return r?o.createElement(u,a(a({ref:t},p),{},{components:r})):o.createElement(u,a({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1028:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var o=r(3117),n=r(102),i=(r(7294),r(3905)),a=["components"],l={},c="\ud83c\uddf8 Solidity verification",s={unversionedId:"verification/solidity",id:"verification/solidity",title:"\ud83c\uddf8 Solidity verification",description:"To formally verify Solidity programs, we are developing tools to translate Ethereum programs to the interactive proof assistant Coq. The goal is to have a translation as idiomatic as possible for Coq. Then we express and verify arbitrary properties on the translated code in Coq with our existing expertise in Coq \ud83d\udc13.",source:"@site/docs/verification/solidity.md",sourceDirName:"verification",slug:"/verification/solidity",permalink:"/docs/verification/solidity",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"\ud83e\udd80 Rust verification",permalink:"/docs/verification/rust"},next:{title:"\ud83d\udc2b OCaml development",permalink:"/docs/services/ocaml-development"}},p=[],m={toc:p};function d(e){var t=e.components,r=(0,n.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-solidity-verification"},"\ud83c\uddf8 Solidity verification"),(0,i.kt)("p",null,"To ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://en.wikipedia.org/wiki/Formal_verification"},"formally verify"))," Solidity programs, we are developing tools to translate Ethereum programs to the interactive proof assistant ",(0,i.kt)("a",{parentName:"p",href:"https://coq.inria.fr/"},"Coq"),". The goal is to have a translation as idiomatic as possible for Coq. Then we express and verify arbitrary properties on the translated code in Coq with our existing expertise in Coq \ud83d\udc13."),(0,i.kt)("p",null,"We have two ongoing projects:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://gitlab.com/formal-land/coq-of-solidity"},"coq-of-solidity")," to directly translate Solidity code into idiomatic Coq code (with a shallow embedding). The resulting traduction is high-level, but it can be hard to make sure that the semantics is preserved."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://gitlab.com/formal-land/ethereum-vm-to-coq"},"ethereum-vm-to-coq")," to translate EVM code (the assembly code of Ethereum) to Coq (with a deep embedding). The translation mechanism is much simpler compared to Solidity, but the generated Coq is also more low-level and harder to follow for formal verification.")),(0,i.kt)("p",null,"In addition, we are thinking about relating the two translations (of Solidity and EVM) with an intermediate translation step, to get the best of both worlds (a reliable and high-level translation of Solidity code to Coq)."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Offer")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"For more information or to formally verify your smart contracts, you can contact us by email at ",(0,i.kt)("a",{parentName:"p",href:"mailto:contact@formal.land"},"c","o","n","t","a","c","t","@","formal",".","l","a","n","d")," \u2709\ufe0f or schedule a call on ",(0,i.kt)("a",{parentName:"p",href:"https://koalendar.com/e/meet-with-formal-land"},"koalendar.com/e/meet-with-formal-land")," \u260e\ufe0f. Our target is to be as cheap as $50,000 to fully verify an existing dApp. We take the existing unit-tests on a project to infer the specification."))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The more you are demanding, the more you need us \ud83c\udfc7.")))}d.isMDXComponent=!0}}]);