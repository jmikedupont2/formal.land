"use strict";(self.webpackChunkformal_land=self.webpackChunkformal_land||[]).push([[5578],{1808:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=r(4848),n=r(8453);const a={title:"Verifying an ERC-20 smart contract in Rust",tags:["Aleph-Zero","coq-of-rust","Rust","Coq","ERC-20","ink!"],authors:[]},s=void 0,i={permalink:"/blog/2023/12/13/rust-verify-erc-20-smart-contract",source:"@site/blog/2023-12-13-rust-verify-erc-20-smart-contract.md",title:"Verifying an ERC-20 smart contract in Rust",description:"Our tool coq-of-rust enables formal verification of \ud83e\udd80&nbsp;Rust code to make sure that a program has no bugs given a precise specification. We work by translating Rust programs to the general proof system \ud83d\udc13&nbsp;Coq.",date:"2023-12-13T00:00:00.000Z",formattedDate:"December 13, 2023",tags:[{label:"Aleph-Zero",permalink:"/blog/tags/aleph-zero"},{label:"coq-of-rust",permalink:"/blog/tags/coq-of-rust"},{label:"Rust",permalink:"/blog/tags/rust"},{label:"Coq",permalink:"/blog/tags/coq"},{label:"ERC-20",permalink:"/blog/tags/erc-20"},{label:"ink!",permalink:"/blog/tags/ink"}],readingTime:20.115,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Verifying an ERC-20 smart contract in Rust",tags:["Aleph-Zero","coq-of-rust","Rust","Coq","ERC-20","ink!"],authors:[]},unlisted:!1,prevItem:{title:"Translating Rust match patterns to Coq with coq-of-rust",permalink:"/blog/2024/01/04/rust-translating-match"},nextItem:{title:"Translation of function bodies from Rust to Coq",permalink:"/blog/2023/11/26/rust-function-body"}},c={authorsImageUrls:[]},l=[];function u(t){const e={a:"a",p:"p",...(0,n.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["Our tool ",(0,o.jsx)(e.a,{href:"https://github.com/formal-land/coq-of-rust",children:"coq-of-rust"})," enables formal verification of ",(0,o.jsx)(e.a,{href:"https://www.rust-lang.org/",children:"\ud83e\udd80\xa0Rust"})," code to make sure that a program has no bugs given a precise specification. We work by translating Rust programs to the general proof system ",(0,o.jsx)(e.a,{href:"https://coq.inria.fr/",children:"\ud83d\udc13\xa0Coq"}),"."]}),"\n",(0,o.jsxs)(e.p,{children:["Here, we show how we formally verify an ",(0,o.jsx)(e.a,{href:"https://github.com/paritytech/ink/blob/master/integration-tests/erc20/lib.rs",children:"ERC-20 smart contract"})," written in Rust for the ",(0,o.jsx)(e.a,{href:"https://alephzero.org/",children:"Aleph Zero"})," blockchain. ",(0,o.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Ethereum#ERC20",children:"ERC-20"})," smart contracts are used to create new kinds of tokens in an existing blockchain. Examples are stablecoins such as the ",(0,o.jsx)(e.a,{href:"https://tether.to/",children:"\ud83d\udcb2USDT"}),"."]})]})}function h(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(u,{...t})}):u(t)}},8453:(t,e,r)=>{r.d(e,{R:()=>s,x:()=>i});var o=r(6540);const n={},a=o.createContext(n);function s(t){const e=o.useContext(a);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),o.createElement(a.Provider,{value:e},t.children)}}}]);